#include "scene.hh"

/*!
 * Jeżeli metoda zwróci true - element dodany , jeżeli false - element o podanym kluczu już istnieje
 */
bool Scene::AddCommand(int key, Command *command){
	return (_mapaPolecen.emplace(key,command)).second;
}

Command* Scene::findCommand(const char* name){
const LibInterface *pInterf  = _LibsSet->FindLib4Cmd(name);
	if(pInterf == nullptr){
		cerr<<"Nie ma takiej wtyczki! Wybierz jedna z dostepnych opcji! "<<endl;
		return nullptr;
	} else{
		return pInterf->CreateCmd();
	}		
}


void Scene::refreshActualMap(string nazwaPliku,Command * komenda){

if (aktualnaMapa.count(nazwaPliku) != 0) {
		aktualnaMapa.erase(nazwaPliku);
		aktualnaMapa.insert(
				std::pair<std::string, Command*>(nazwaPliku, komenda));
	} else {
		aktualnaMapa.insert(
				std::pair<std::string, Command*>(nazwaPliku, komenda));
	}
std::cerr<<"Aktualna mapa posiada: "<<aktualnaMapa.size()<<" elementow."<<std::endl;
}

void Scene::Oko_simulateMovement(double polozenieDolnejPowieki,double polozenieGornejPowieki,
			double _PpolozenieDolnejPowieki,double _PpolozenieGornejPowieki,int szybkoscZmiany){
/*!
 * mikroruch dla gornej powieki
 */
double roznicaGornejPowieki = abs(polozenieGornejPowieki - _PpolozenieGornejPowieki) / szybkoscZmiany;
/*!
 * mikroruch dla dolnej powieki
 */
double roznicaDolnejPowieki = abs(polozenieDolnejPowieki - _PpolozenieDolnejPowieki) / szybkoscZmiany;
	
int iloscRuchow = abs(polozenieGornejPowieki - _PpolozenieGornejPowieki) / roznicaGornejPowieki;

double aktualnePolozenieGornejPowieki = _PpolozenieGornejPowieki;
double aktualnePolozenieDolnejPowieki = _PpolozenieDolnejPowieki;
for(int i=0;i<iloscRuchow;i++){
	aktualnePolozenieGornejPowieki+=roznicaGornejPowieki;
	aktualnePolozenieDolnejPowieki+=roznicaDolnejPowieki;

	Oko_zbudujPolecenieDlaGnuplota(aktualnePolozenieDolnejPowieki,aktualnePolozenieGornejPowieki); 
	
}

}

void Scene::Usta_simulateMovement(double polozenieDolnejWargi,double polozenieGornejWargi,double oddalenieKacikowUst,
			double _PpolozenieDolnejWargi,double _PpolozenieGornejWargi,double _PoddalenieKacikowUst,int szybkoscZmiany){
}

void Scene::Brew_simulateMovement(int nrPolecenia,string nazwaPliku){
}

